// <auto-generated />
using Bid_A_Car_Project.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Bid_A_Car_Prject.Migrations
{
    [DbContext(typeof(SaleContext))]
    [Migration("20201126025442_IntialMigration")]
    partial class IntialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Bid_A_Car_Project.Models.ImagesVehicle", b =>
                {
                    b.Property<int>("ImageID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(10)");

                    b.Property<string>("ImageName")
                        .HasColumnType("varchar(100)");

                    b.Property<int>("VehicleID")
                        .HasColumnType("int(10)");

                    b.HasKey("ImageID");

                    b.HasIndex("VehicleID")
                        .HasName("FK_ImagesVehicles_Vehicle");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("Bid_A_Car_Project.Models.Transaction", b =>
                {
                    b.Property<int>("TransactionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(10)");

                    b.Property<int>("SaleAmount")
                        .HasColumnType("int(15)");

                    b.Property<int>("SellerID")
                        .HasColumnType("int(10)");

                    b.HasKey("TransactionID");

                    b.HasIndex("SellerID")
                        .HasName("FK_Transaction_User");

                    b.ToTable("Transaction");
                });

            modelBuilder.Entity("Bid_A_Car_Project.Models.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(10)");

                    b.Property<string>("City")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_general_ci");

                    b.Property<int>("PhoneNumber")
                        .HasColumnType("int(12)");

                    b.Property<string>("PostalCode")
                        .HasColumnType("varchar(8)");

                    b.Property<string>("StreetAdress")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("UserName")
                        .HasColumnType("varchar(50)");

                    b.HasKey("ID");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            ID = -1,
                            City = "Edmonton",
                            Name = "John",
                            PhoneNumber = 780000000,
                            PostalCode = "T5T5T5",
                            StreetAdress = " 111 Crescent Ave",
                            UserName = "johnny123"
                        },
                        new
                        {
                            ID = -2,
                            City = "Calgary",
                            Name = "Bill",
                            PhoneNumber = 780111111,
                            PostalCode = "T6T6T6",
                            StreetAdress = " 222 Crescent Ave",
                            UserName = "billy123"
                        },
                        new
                        {
                            ID = -3,
                            City = "Chicago",
                            Name = "John",
                            PhoneNumber = 780225887,
                            PostalCode = "T7T7T7",
                            StreetAdress = " 666 Crescent Ave",
                            UserName = "johnny123"
                        });
                });

            modelBuilder.Entity("Bid_A_Car_Project.Models.Vehicle", b =>
                {
                    b.Property<int>("VehicleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(10)");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(500)");

                    b.Property<int>("Kilometers")
                        .HasColumnType("int(9)");

                    b.Property<string>("Make")
                        .IsRequired()
                        .HasColumnType("varchar(60)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("varchar(60)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_general_ci");

                    b.Property<int>("UserID")
                        .HasColumnType("int(10)");

                    b.Property<int>("Year")
                        .HasColumnType("int(6)");

                    b.HasKey("VehicleID");

                    b.HasIndex("UserID")
                        .HasName("FK_Vehicle_User");

                    b.ToTable("Vehicle");

                    b.HasData(
                        new
                        {
                            VehicleID = -1,
                            Description = "The cat is in mint condition, Lady Driven ",
                            Kilometers = 3000,
                            Make = "BMW",
                            Model = "X5",
                            UserID = -2,
                            Year = 2014
                        },
                        new
                        {
                            VehicleID = -2,
                            Description = "3 year old drives like brand new ",
                            Kilometers = 13000,
                            Make = "AUDI",
                            Model = "Q5",
                            UserID = -1,
                            Year = 2012
                        },
                        new
                        {
                            VehicleID = -3,
                            Description = "Trick runs smooth Dont need it any more ",
                            Kilometers = 33000,
                            Make = "Ford",
                            Model = "F150",
                            UserID = -3,
                            Year = 2018
                        });
                });

            modelBuilder.Entity("Bid_A_Car_Project.Models.ImagesVehicle", b =>
                {
                    b.HasOne("Bid_A_Car_Project.Models.Vehicle", "Vehicle")
                        .WithMany("Images")
                        .HasForeignKey("VehicleID")
                        .HasConstraintName("FK_ImagesVehicles_Vehicle")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Bid_A_Car_Project.Models.Transaction", b =>
                {
                    b.HasOne("Bid_A_Car_Project.Models.User", "User")
                        .WithMany("Transactions")
                        .HasForeignKey("SellerID")
                        .HasConstraintName("FK_Transaction_User")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Bid_A_Car_Project.Models.Vehicle", b =>
                {
                    b.HasOne("Bid_A_Car_Project.Models.User", "User")
                        .WithMany("Vehicles")
                        .HasForeignKey("UserID")
                        .HasConstraintName("FK_Vehicle_User")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
